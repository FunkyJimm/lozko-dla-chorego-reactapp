[{"D:\\React-Applications\\lozko-dla-chorego-app\\src\\index.js":"1","D:\\React-Applications\\lozko-dla-chorego-app\\src\\reportWebVitals.js":"2","D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\App.js":"3","D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\Registration.js":"4","D:\\React-Applications\\lozko-dla-chorego-app\\src\\apiKey.js":"5","D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\Login.js":"6","D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\Hospitals.js":"7","D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\User.js":"8","D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\Finder.js":"9","D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\professions\\Dispatcher.js":"10","D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\professions\\Doctor.js":"11","D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\professions\\Paramedic.js":"12","D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\Ambulances.js":"13"},{"size":511,"mtime":1608655065302,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":361,"mtime":1609693740012,"results":"17","hashOfConfig":"15"},{"size":5228,"mtime":1608977264312,"results":"18","hashOfConfig":"15"},{"size":34,"mtime":1608744691283,"results":"19","hashOfConfig":"15"},{"size":1968,"mtime":1609085969655,"results":"20","hashOfConfig":"15"},{"size":3971,"mtime":1608977034092,"results":"21","hashOfConfig":"15"},{"size":5358,"mtime":1609689875755,"results":"22","hashOfConfig":"15"},{"size":2738,"mtime":1609694378475,"results":"23","hashOfConfig":"15"},{"size":2843,"mtime":1609690357718,"results":"24","hashOfConfig":"15"},{"size":3519,"mtime":1609689910408,"results":"25","hashOfConfig":"15"},{"size":3634,"mtime":1609689914582,"results":"26","hashOfConfig":"15"},{"size":2137,"mtime":1609693861030,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"jf3gaf",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React-Applications\\lozko-dla-chorego-app\\src\\index.js",[],["59","60"],"D:\\React-Applications\\lozko-dla-chorego-app\\src\\reportWebVitals.js",[],"D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\App.js",["61","62","63","64"],"D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\Registration.js",[],"D:\\React-Applications\\lozko-dla-chorego-app\\src\\apiKey.js",[],"D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\Login.js",["65"],"import { Component } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\n\r\nimport { API_KEY } from '../apiKey';\r\n\r\nconst cookies = new Cookies();\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        userLogin: \"\",\r\n        userPassword: \"\",\r\n        apiKey: API_KEY,\r\n        errorMessage: \"\"\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        axios.post('http://localhost:3000/users/login', this.state)\r\n            .then(response => {\r\n                console.log(response);\r\n                this.setState({\r\n                    errorMessage: response.data.message\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>Logowanie:</p>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label>\r\n                        Login:\r\n                        <input type=\"text\"\r\n                            name=\"userLogin\"\r\n                            value={this.state.userLogin}\r\n                            onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Hasło:\r\n                        <input type=\"password\"\r\n                            name=\"userPassword\"\r\n                            value={this.state.userPassword}\r\n                            onChange={this.handleChange} />\r\n                    </label>\r\n                    <br />\r\n                    <button type=\"submit\">Zaloguj</button>\r\n                    <br />\r\n                    {this.state.errorMessage ? <span id=\"error\">{this.state.errorMessage}</span> : \"\"}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\Hospitals.js",[],"D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\User.js",["66"],"D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\Finder.js",[],"D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\professions\\Dispatcher.js",["67","68"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { API_KEY } from '../../apiKey';\r\n\r\nconst Dispatcher = props => {\r\n    const { id } = props;\r\n\r\n    const [dispatcherResponse, setDispatcherResponse] = React.useState(null);\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n\r\n    const [edit, setEdit] = React.useState(false);\r\n\r\n    const [dispatcherHospital, setDispatcherHospital] = React.useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const dispatcherQuery = {\r\n            searchType: \"dispatcherUserID\",\r\n            searchInput: id,\r\n            apiKey: API_KEY\r\n        }\r\n\r\n        axios.post('http://localhost:3000/dispatchers/find', dispatcherQuery)\r\n            .then(response => {\r\n                if (response.data._id) {\r\n                    setDispatcherResponse(response.data)\r\n                } else {\r\n                    setErrorMessage(response.data)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(\"Błąd odczytu danych!\");\r\n            })\r\n    }, [])\r\n\r\n    const handleDispatcherHospital = e => {\r\n        setDispatcherHospital(e.target.value);\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        setEdit(!edit);\r\n    }\r\n\r\n    const handleAddDispatcher = () => {\r\n        const dispatcherJSON = {\r\n            dispatcherUserID: id,\r\n            dispatcherHospital,\r\n            apiKey: API_KEY\r\n        }\r\n\r\n        axios.post('http://localhost:3000/dispatchers/add', dispatcherJSON)\r\n            .then(response => {\r\n                setErrorMessage(response.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {errorMessage ? <p>{errorMessage}</p> : \"\"}\r\n            {errorMessage ? <button onClick={handleEdit}>Dodaj nowego dyspozytora</button> : null}\r\n\r\n            {edit ?\r\n                <table>\r\n                    <tr>\r\n                        <td>Szpital:</td>\r\n                        <td>\r\n                            <input type=\"text\"\r\n                                value={dispatcherHospital}\r\n                                onChange={handleDispatcherHospital} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colspan=\"2\">\r\n                            <button onClick={handleAddDispatcher}>Zatwierdź</button>\r\n                        </td>\r\n                    </tr>\r\n                </table> : null}\r\n\r\n            {dispatcherResponse ?\r\n                <table>\r\n                    <tr>\r\n                        <td>Szpital:</td>\r\n                        <td>{dispatcherResponse.dispatcherHospital}</td>\r\n                    </tr>\r\n                </table> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dispatcher;","D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\professions\\Doctor.js",["69","70"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { API_KEY } from '../../apiKey';\r\n\r\nconst Doctor = props => {\r\n    const { id } = props;\r\n\r\n    const [doctorResponse, setDoctorResponse] = React.useState(null);\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n\r\n    const [edit, setEdit] = React.useState(false);\r\n\r\n    const [doctorHospital, setDoctorHospital] = React.useState(\"\");\r\n    const [doctorSpecialization, setDoctorSpecialization] = React.useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const doctorQuery = {\r\n            searchType: \"doctorUserID\",\r\n            searchInput: id,\r\n            apiKey: API_KEY\r\n        }\r\n\r\n        console.log(doctorQuery);\r\n\r\n        axios.post('http://localhost:3000/doctors/find', doctorQuery)\r\n            .then(response => {\r\n                if (response.data._id) {\r\n                    setDoctorResponse(response.data)\r\n                } else {\r\n                    setErrorMessage(response.data)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(\"Błąd odczytu danych!\");\r\n            })\r\n    }, [])\r\n\r\n    const handleDoctorHospital = e => {\r\n        setDoctorHospital(e.target.value);\r\n    }\r\n\r\n    const handleDoctorSpecialization = e => {\r\n        setDoctorSpecialization(e.target.value);\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        setEdit(!edit);\r\n    }\r\n\r\n    const handleAddDoctor = () => {\r\n        const doctorJSON = {\r\n            doctorUserID: id,\r\n            doctorHospital,\r\n            doctorSpecialization,\r\n            apiKey: API_KEY\r\n        }\r\n\r\n        axios.post('http://localhost:3000/doctors/add', doctorJSON)\r\n            .then(response => {\r\n                setErrorMessage(response.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {errorMessage ? <p>{errorMessage}</p> : \"\"}\r\n            {errorMessage ? <button onClick={handleEdit}>Dodaj nowego lekarza</button> : null}\r\n\r\n            {edit ?\r\n                <table>\r\n                    <tr>\r\n                        <td>Szpital:</td>\r\n                        <td>\r\n                            <input type=\"text\"\r\n                                value={doctorHospital}\r\n                                onChange={handleDoctorHospital} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Specjalizacja:</td>\r\n                        <td>\r\n                            <input type=\"text\"\r\n                                value={doctorSpecialization}\r\n                                onChange={handleDoctorSpecialization} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colspan=\"2\">\r\n                            <button onClick={handleAddDoctor}>Zatwierdź</button>\r\n                        </td>\r\n                    </tr>\r\n                </table> : null}\r\n\r\n            {doctorResponse ?\r\n                <table>\r\n                    <tr>\r\n                        <td>Szpital:</td>\r\n                        <td>{doctorResponse.doctorHospital}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Specjalizacja:</td>\r\n                        <td>{doctorResponse.doctorSpecialization}</td>\r\n                    </tr>\r\n                </table> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Doctor;","D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\professions\\Paramedic.js",["71","72"],"import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { API_KEY } from '../../apiKey';\r\n\r\nconst Paramedic = props => {\r\n    const { id } = props;\r\n\r\n    const [paramedicResponse, setParamedicResponse] = React.useState(null);\r\n    const [errorMessage, setErrorMessage] = React.useState(\"\");\r\n\r\n    const [edit, setEdit] = React.useState(false);\r\n\r\n    const [paramedicAmbulance, setParamedicAmbulance] = React.useState(\"\");\r\n    const [paramedicRescueTeam, setParamedicRescueTeam] = React.useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const paramedicQuery = {\r\n            searchType: \"paramedicUserID\",\r\n            searchInput: id,\r\n            apiKey: API_KEY\r\n        }\r\n\r\n        console.log(paramedicQuery);\r\n\r\n        axios.post('http://localhost:3000/paramedics/find', paramedicQuery)\r\n            .then(response => {\r\n                if (response.data._id) {\r\n                    setParamedicResponse(response.data)\r\n                } else {\r\n                    setErrorMessage(response.data)\r\n                }\r\n            })\r\n            .catch(error => {\r\n                setErrorMessage(\"Błąd odczytu danych!\");\r\n            })\r\n    }, [])\r\n\r\n    const handleParamedicAmbulance = e => {\r\n        setParamedicAmbulance(e.target.value);\r\n    }\r\n\r\n    const handleParamedicRescueTeam = e => {\r\n        setParamedicRescueTeam(e.target.value);\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        setEdit(!edit);\r\n    }\r\n\r\n    const handleAddParamedic = () => {\r\n        const paramedicJSON = {\r\n            paramedicUserID: id,\r\n            paramedicAmbulance,\r\n            paramedicRescueTeam,\r\n            apiKey: API_KEY\r\n        }\r\n\r\n        axios.post('http://localhost:3000/paramedics/add', paramedicJSON)\r\n            .then(response => {\r\n                setErrorMessage(response.data)\r\n            })\r\n            .catch(error => {\r\n                console.log(error)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {errorMessage ? <p>{errorMessage}</p> : \"\"}\r\n            {errorMessage ? <button onClick={handleEdit}>Dodaj nowego ratownika</button> : null}\r\n\r\n            {edit ?\r\n                <table>\r\n                    <tr>\r\n                        <td>Nr rejestracyjny ambulansu:</td>\r\n                        <td>\r\n                            <input type=\"text\"\r\n                                value={paramedicAmbulance}\r\n                                onChange={handleParamedicAmbulance} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Nr załogi:</td>\r\n                        <td>\r\n                            <input type=\"text\"\r\n                                value={paramedicRescueTeam}\r\n                                onChange={handleParamedicRescueTeam} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td colspan=\"2\">\r\n                            <button onClick={handleAddParamedic}>Zatwierdź</button>\r\n                        </td>\r\n                    </tr>\r\n                </table> : null}\r\n\r\n            {paramedicResponse ?\r\n                <table>\r\n                    <tr>\r\n                        <td>Nr rejestracyjny ambulansu:</td>\r\n                        <td>{paramedicResponse.paramedicAmbulance}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Nr załogi:</td>\r\n                        <td>{paramedicResponse.paramedicRescueTeam}</td>\r\n                    </tr>\r\n                </table> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paramedic;","D:\\React-Applications\\lozko-dla-chorego-app\\src\\components\\Ambulances.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":17},{"ruleId":"77","severity":1,"message":"81","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"77","severity":1,"message":"82","line":5,"column":8,"nodeType":"79","messageId":"80","endLine":5,"endColumn":20},{"ruleId":"77","severity":1,"message":"83","line":6,"column":8,"nodeType":"79","messageId":"80","endLine":6,"endColumn":14},{"ruleId":"77","severity":1,"message":"84","line":7,"column":7,"nodeType":"79","messageId":"80","endLine":7,"endColumn":14},{"ruleId":"77","severity":1,"message":"85","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"85","line":1,"column":28,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"87","line":34,"column":8,"nodeType":"88","endLine":34,"endColumn":10,"suggestions":"89"},{"ruleId":"77","severity":1,"message":"85","line":1,"column":28,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"87","line":37,"column":8,"nodeType":"88","endLine":37,"endColumn":10,"suggestions":"90"},{"ruleId":"77","severity":1,"message":"85","line":1,"column":28,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"86","severity":1,"message":"87","line":37,"column":8,"nodeType":"88","endLine":37,"endColumn":10,"suggestions":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'Hospitals' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'Registration' is defined but never used.","'Finder' is defined but never used.","'cookies' is assigned a value but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["94"],["95"],["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"97","fix":"99"},{"desc":"97","fix":"100"},"Update the dependencies array to be: [id]",{"range":"101","text":"102"},{"range":"103","text":"102"},{"range":"104","text":"102"},[1077,1079],"[id]",[1155,1157],[1188,1190]]